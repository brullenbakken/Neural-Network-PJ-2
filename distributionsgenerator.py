"""
distributionsgenerator.py
---
Source code for distributions.csv
---
This file creates pairs of input and output data for the neural network.
Each pair consists of a list of numbers generated by some
distribution (input data), and a digit indicating which distribution
was used (desired neural network output).
"""
import numpy as np
import pandas as pd


data = []

n = 3000

# Exponential distribution.
for i in range(n):
    values = list(np.random.exponential(i / n, 50))
    values.sort()
    values.append(0)
    data.append(values)

# Lognormal distribution.
for i in range(n):
    a = np.random.randn()
    values = list(np.random.lognormal(a, i / n, 50))
    values.sort()
    values.append(1)
    data.append(values)

# Gamma distribution.
for i in range(n):
    values = list(np.random.gamma(2, i / n, 50))
    values.sort()
    values.append(2)
    data.append(values)

# Uniform distribution.
for i in range(n):
    a = np.random.randn()
    b = np.random.randn()
    while b < a:
        b = np.random.randn()
    values = list((b - a) * np.random.random(50) + a)
    values.sort()
    values.append(3)
    data.append(values)

# Normal distribution.
for i in range(n):
    a = np.random.randn()
    values = list(np.random.normal(a, i / n, 50))
    values.sort()
    values.append(4)
    data.append(values)

np.random.shuffle(data)

Output = pd.DataFrame(data,)
Output.to_csv("distributions.csv", sep="\t", encoding="utf-8", index=False)
